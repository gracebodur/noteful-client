{"version":3,"sources":["CircleButton/CircleButton.js","NotefulContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","RouteError/RouteError.js","ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","React","createElement","join","defaultProps","createContext","notes","folders","addfolder","addNote","deleteNote","findNote","noteId","find","note","id","NoteListNav","this","context","map","folder","key","NavLink","to","folderId","filter","length","countNotesForFolder","name","Link","type","icon","Component","contextType","NotefulContext","NotePageNav","match","params","findFolder","role","onClick","history","goBack","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","config","method","headers","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","modified","format","NoteListMain","notesForFolder","getNotesForFolder","NotePageMain","handleDeleteNote","push","content","split","para","i","ppropTypes","PropTypes","object","location","RouteError","state","hasError","ValidationError","message","AddFolder","folderName","value","touched","setState","event","folderToAdd","body","JSON","stringify","response","newArray","trim","folderNameError","validateFolderName","onSubmit","handleSubmit","htmlFor","onChange","updateFolderName","target","disabled","AddNote","title","noteToAdd","Date","log","titleError","validateNoteName","contentNameError","validateContentName","html","for","updateNoteName","updateNoteContent","App","all","notesRes","foldersRes","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b56c269f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, children, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n\r\nNavCircleButton.propTypes = {\r\n  reole: PropTypes.string,\r\n  link: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  type: PropTypes.string\r\n}\r\n","import React from 'react'\r\n\r\nexport default React.createContext({\r\n    notes: [],\r\n    folders: [],\r\n    addfolder: () => {},\r\n    addNote: () => {},\r\n    deleteNote: () => {}\r\n})","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id === folderId)\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id === noteId)\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folderId === folderId)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folderId === folderId).length\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport NotefulContext from '../NotefulContext'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport PropTypes from 'prop-types'\r\nimport './NoteListNav.css'\r\n\r\nexport default class NoteListNav extends React.Component {\r\n\r\n  static contextType = NotefulContext;\r\n  render() {\r\n    const { folders=[], notes=[] } = this.context\r\n\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {countNotesForFolder(notes, folder.id)}\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListNav__button-wrapper'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-folder'\r\n            type='button'\r\n            className='NoteListNav__add-folder-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Folder\r\n          </CircleButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNoteListNav.propTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n  match: PropTypes.object\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport NotefulContext from '../NotefulContext'\r\nimport { findNote, findFolder } from '../notes-helpers'\r\nimport PropTypes from 'prop-types'\r\nimport './NotePageNav.css'\r\n\r\nexport default class NotePageNav extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => { }\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = NotefulContext;\r\n  render() {\r\n    const { notes, folders, } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folderId)\r\n    return (\r\n      <div className='NotePageNav'>\r\n        <CircleButton\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          <FontAwesomeIcon icon='chevron-left' />\r\n          <br />\r\n          Back\r\n        </CircleButton>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  }\r\n  \r\n  NotePageNav.propTypes = {\r\n    history: PropTypes.object,\r\n    location: PropTypes.object,\r\n    match: PropTypes.object\r\n  }\r\n\r\n","export default {\r\n    API_ENDPOINT: 'http://localhost:9090'\r\n  }","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport NotefulContext from '../NotefulContext'\r\nimport config from '../config'\r\nimport PropTypes from 'prop-types'\r\nimport './Note.css'\r\n\r\nexport default class Note extends React.Component {\r\n  static defaultProps ={\r\n    onDeleteNote: () => {},\r\n  }\r\n  static contextType = NotefulContext;\r\n\r\n  handleClickDelete = e => {\r\n    e.preventDefault()\r\n    const noteId = this.props.id\r\n\r\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(() => {\r\n        this.context.deleteNote(noteId)\r\n        // allow parent to perform extra behaviour\r\n        this.props.onDeleteNote(noteId)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { name, id, modified } = this.props\r\n    return (\r\n      <div className='Note'>\r\n        <h2 className='Note__title'>\r\n          <Link to={`/note/${id}`}>\r\n            {name}\r\n          </Link>\r\n        </h2>\r\n        <button\r\n          className='Note__delete'\r\n          type='button'\r\n          onClick={this.handleClickDelete}\r\n        >\r\n          <FontAwesomeIcon icon='trash-alt' />\r\n          {' '}\r\n          remove\r\n        </button>\r\n        <div className='Note__dates'>\r\n          <div className='Note__dates-modified'>\r\n            Modified\r\n            {' '}\r\n            <span className='Date'>\r\n              {format(modified, 'Do MMM YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNote.propTypes = {\r\n  id: PropTypes.string,\r\n  modified: PropTypes.oneOfType([ PropTypes.string, PropTypes.number])\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport NotefulContext from '../NotefulContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\nimport PropTypes from 'prop-types'\r\nimport './NoteListMain.css'\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n\r\n  static contextType = NotefulContext\r\n  render() {\r\n    const { folderId } = this.props.match.params\r\n    const { notes=[] } = this.context\r\n    const notesForFolder = getNotesForFolder(notes, folderId)\r\n  return (\r\n    <section className='NoteListMain'>\r\n      <ul>\r\n        {notesForFolder.map(note =>\r\n          <li key={note.id}>\r\n            <Note\r\n              id={note.id}\r\n              name={note.name}\r\n              modified={note.modified}\r\n            />\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <div className='NoteListMain__button-container'>\r\n        <CircleButton\r\n          tag={Link}\r\n          to='/add-note'\r\n          type='button'\r\n          className='NoteListMain__add-note-button'\r\n        >\r\n          <FontAwesomeIcon icon='plus' />\r\n          <br />\r\n          Note\r\n        </CircleButton>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n}\r\n\r\nNoteListMain.propTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n  match: PropTypes.object\r\n}\r\n","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport NotefulContext from '../NotefulContext'\r\nimport { findNote } from '../notes-helpers'\r\nimport PropTypes from 'prop-types'\r\nimport './NotePageMain.css'\r\n\r\nexport default class NotePageMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n\r\n  static contextType = NotefulContext\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    const { notes=[] } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || { content: '' }\r\n    return (\r\n      <section className='NotePageMain'>\r\n        <Note\r\n          id={note.id}\r\n          name={note.name}\r\n          modified={note.modified}\r\n          onDeleteNote={this.handleDeleteNote}\r\n        />\r\n        <div className='NotePageMain__content'>\r\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n            <p key={i}>{para}</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageMain.ppropTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n  match: PropTypes.object\r\n}","import React from 'react';\r\n\r\nclass RouteError extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: true\r\n        }\r\n    }\r\n\r\n    static getDerivedStatedfromError() {\r\n        return { hasError: false};\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return(\r\n                <h2>Something went wrong, please try again</h2>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default RouteError;\r\n","import React from 'react';\r\n\r\nexport default function ValidationError(props) {\r\n    if(props.message) {\r\n        return (\r\n            <div className=\"error\">{props.message}</div>\r\n        )\r\n    }\r\n    return <> </>\r\n}","import React, {Component} from 'react'\r\nimport ValidationError from '../ValidationError'\r\nimport config from '../config';\r\nimport NotefulContext from '../NotefulContext';\r\nimport './addFolder.css'\r\n\r\n\r\nexport default class AddFolder extends Component {\r\n\r\n static contextType = NotefulContext\r\n\r\nconstructor(props) {\r\n    super(props)\r\n    this.state={\r\n        folderName: {\r\n        value: '',\r\n        touched: true\r\n    }\r\n    }\r\n}\r\n\r\nupdateFolderName(name) {\r\n    this.setState({folderName: {value: name, touched: false}})\r\n}\r\n\r\nhandleSubmit(event) {\r\n    event.preventDefault();\r\n    const { folderName } = this.state;\r\n    const folderToAdd = {\r\n    name: folderName.value\r\n    }\r\n    fetch(`${config.API_ENDPOINT}/folders`, {\r\n    method: 'POST',\r\n    headers: {\r\n        'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(folderToAdd)\r\n    })\r\n    .then(response => {\r\n    if(!response.ok){\r\n        return response.json().then(e=>Promise.reject(e))\r\n    }\r\n    return response.json()\r\n    })\r\n    .then((res) => {\r\n    const newArray = this.context.folders\r\n    newArray.push(res)\r\n    this.context.folders = newArray\r\n    this.props.history.push('/')\r\n    })\r\n    .catch(error => {\r\n    console.error(error)\r\n    })\r\n}\r\n\r\nvalidateFolderName() {\r\n    const name = this.state.folderName.value.trim();\r\n    // console.log(name)\r\n    if(name.length === 0) {\r\n    return 'Folder name is required'\r\n    } else if (name.length > 20) {\r\n    return 'Folder name must be less 20 characters'\r\n    }\r\n}\r\n\r\nrender() {\r\n    const folderNameError = this.validateFolderName();\r\n    return (\r\n    <section>\r\n        <form className=\"add-folder\" onSubmit={event => this.handleSubmit(event)}>\r\n        <h2>Create Folder</h2>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"folder-name\">\r\n            Name\r\n            </label>\r\n            <input \r\n                type=\"text\" \r\n                className=\"folder-input\" \r\n                name=\"folder-name\" \r\n                id=\"folder-name\" \r\n                onChange={e => this.updateFolderName(e.target.value)}>\r\n            </input>\r\n                {this.state.folderName.touched && <ValidationError message={folderNameError} />}\r\n            <button \r\n                type=\"submit\" \r\n                className=\"add-folder-button\" \r\n                disabled={this.validateFolderName()}>Add Folder</button>\r\n        </div>\r\n        </form>\r\n    </section>\r\n    )\r\n}\r\n}\r\n\r\n","import React from 'react'\r\nimport ValidationError from '../ValidationError'\r\nimport NotefulContext from '../NotefulContext'\r\nimport config from '../config'\r\nimport './addNote.css'\r\n\r\nclass AddNote extends React.Component {\r\n  \r\n    static contextType = NotefulContext\r\n  \r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            title: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            content: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            folder: {\r\n                value: '',\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n    updateNoteName(name) {\r\n        this.setState({title: {value: name, touched: true}})\r\n    }\r\n    updateNoteContent(content) {\r\n        this.setState({content: {value:content, touched: true}})\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const {title, content, folder} = this.state\r\n        const noteToAdd = {\r\n            name: title.value,\r\n            content: content.value,\r\n            folderId: folder.value,\r\n            modified: new Date ()\r\n        }\r\n        fetch(`${config.API_ENDPOINT}/notes`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(noteToAdd)\r\n        })\r\n        .then(response => {\r\n            if(!response.ok){\r\n              return response.json().then(e=>Promise.reject(e))\r\n            }\r\n            return response.json()\r\n          })\r\n          .then((res) => {\r\n              const newArray = this.context.notes\r\n              console.log(noteToAdd)\r\n              newArray.push(res)\r\n              this.context.notes = newArray\r\n              this.props.history.push('/')\r\n          })\r\n          .catch(error => {\r\n              console.log(error)\r\n          })\r\n    }\r\n\r\n    validateNoteName() {\r\n        const name = this.state.title.value.trim()\r\n        if(name.length === 0) {\r\n            return 'Note is required'\r\n        }else if (name.length > 150) {\r\n            return 'Note name must be less than 150 characters.'\r\n        }\r\n    }\r\n\r\n    validateContentName() {\r\n        const content = this.state.content.value.trim()\r\n        if(content.length === 0) {\r\n            return 'Content i required'\r\n        }else if (content.length > 500) {\r\n            return 'Content must be less than 500 characters.'\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const titleError = this.validateNoteName\r\n        const contentNameError = this.validateContentName\r\n        return(\r\n            <section>\r\n                <form className='add-note' onSubmit={ e => this.handleSubmit(e)}>\r\n                    <h2>Create Note</h2>\r\n                    <div>\r\n                        <label html for='note-name'>Name</label>\r\n                        <input type = 'text' name='note-name' id = 'note-name' onChange={e => this.updateNoteName(e.target.value)}></input>\r\n                        {this.state.title.touched && <ValidationError message={titleError} />}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='content-name'>Content</label>\r\n                        <textarea name='content-name' id='content-name' onChange={e => this.updateNoteContent(e.target.value)}/>\r\n                        {this.state.content.touched && <ValidationError message={contentNameError} />}\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddNote","import React, {Component} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NoteListNav from '../NoteListNav/NoteListNav';\r\nimport NotePageNav from '../NotePageNav/NotePageNav';\r\nimport NoteListMain from '../NoteListMain/NoteListMain';\r\nimport NotePageMain from '../NotePageMain/NotePageMain';\r\nimport NotefulContext from '../NotefulContext'\r\nimport config from '../config'\r\nimport RouteError from '../RouteError/RouteError'\r\nimport AddFolder from '../AddFolder/AddFolder'\r\nimport AddNote from '../AddNote/AddNote'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        notes: [],\r\n        folders: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(`${config.API_ENDPOINT}/notes`),\r\n            fetch(`${config.API_ENDPOINT}/folders`)\r\n        ])\r\n            .then(([notesRes, foldersRes]) => {\r\n                if (!notesRes.ok)\r\n                    return notesRes.json().then(e => Promise.reject(e));\r\n                if (!foldersRes.ok)\r\n                    return foldersRes.json().then(e => Promise.reject(e));\r\n\r\n                return Promise.all([notesRes.json(), foldersRes.json()]);\r\n            })\r\n            .then(([notes, folders]) => {\r\n                this.setState({notes, folders});\r\n            })\r\n            .catch(error => {\r\n                console.error({error});\r\n            });\r\n    }\r\n\r\n    handleDeleteNote = noteId => {\r\n        this.setState({\r\n            notes: this.state.notes.filter(note => note.id !== noteId)\r\n        });\r\n    };\r\n\r\n    renderNavRoutes() {\r\n        return (\r\n            <RouteError>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListNav}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\r\n            </RouteError>\r\n        );\r\n    }\r\n\r\n    renderMainRoutes() {\r\n        return (\r\n            <RouteError>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListMain}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\r\n                <Route path=\"/add-folder\" component={AddFolder} />\r\n                <Route path=\"/add-note\" component={AddNote} />\r\n            </RouteError>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const value = {\r\n            notes: this.state.notes,\r\n            folders: this.state.folders,\r\n            deleteNote: this.handleDeleteNote\r\n        };\r\n        return (\r\n            <NotefulContext.Provider value={value}>\r\n                <div className=\"App\">\r\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\r\n                    <header className=\"App__header\">\r\n                        <h1>\r\n                            <Link to=\"/\">Noteful</Link>{' '}\r\n                            <FontAwesomeIcon icon=\"check-double\" />\r\n                        </h1>\r\n                    </header>\r\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\r\n                </div>\r\n            </NotefulContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}